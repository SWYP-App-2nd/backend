plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.19.4'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'checkstyle'
}

group = 'kr.swyp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.80'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'software.amazon.awssdk:s3:2.31.16'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.4'
    testImplementation 'org.testcontainers:testcontainers:1.20.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'
    testImplementation 'org.testcontainers:localstack:1.20.6'
    testCompileOnly 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/checkstyle.xml")
    toolVersion = "10.10.0"
    checkstyleTest.enabled = false
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

def isWindows = System.getProperty("os.name").toLowerCase().contains("win")
def docsOutputPath = isWindows
        ? "$buildDir/generated-snippets/openapi3"
        : "build/resources/main/static/docs"

openapi3 {
    server = "localhost:8080"
    title = "스위프 앱 1기 2팀 API"
    description = "이 문서에서는 API 문서를 제공합니다."
    version = "0.0.1"
    outputFileNamePrefix = 'api'
    format = 'json'

    // os에 따라 분기
    outputDirectory = docsOutputPath
}